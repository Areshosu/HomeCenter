/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pages.Customer;

import Models.Appointment;
import Models.Database;
import java.awt.Color;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/**
 *
 * @author yyhao0422
 */
public class MakeAppointmentPage extends javax.swing.JFrame {

    /**
     * Creates new form MakeAppointmentPage
     */
    
    public String email;
    public Object[] selectedData;
    private String reqTime;
    private static String errorMessage;
    
    public void setloginEmail(String email){
        this.email = email;
    }
    
    public void setSelectedServiceData(Object[] selectedData){
        this.selectedData = selectedData;
    }
    
    
    public MakeAppointmentPage() {
        initComponents();
    }
    
    public void populateAppointmentData(){
        technicianEmailField.setText(selectedData[0].toString());
        serviceField.setText(selectedData[1].toString());
    }
    
    public static boolean isTechnicianAvailable(String dateStr, Appointment[] appointments) {
        try {
                   DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy, h:mma");
                   LocalDateTime desiredDateTime = LocalDateTime.parse(dateStr, formatter);

            for (Appointment appointment : appointments) {
                LocalDateTime startTime = appointment.getStartingDateTime();
                LocalDateTime endTime = appointment.getEndingDateTime();
                System.out.print("(desiredDateTime.isEqual(startTime): "+(desiredDateTime.isEqual(startTime)));
                System.out.print("(desiredDateTime.isAfter(startTime): "+(desiredDateTime.isAfter(startTime)));
                System.out.print("(desiredDateTime.isBefore(startTime): "+(desiredDateTime.isBefore(startTime)));
                 if ((desiredDateTime.isEqual(startTime) || desiredDateTime.isAfter(startTime)) && 
                       desiredDateTime.isBefore(endTime)) {
                    // Appointment overlaps with the desired date and time
                    errorMessage ="The time slot has been booked. Pick other time.";
                    return false; // Technician is not available
                }
            }

            // No overlapping appointments found, technician is available
            return true;
        } catch (DateTimeParseException e) {
            // Handle parsing errors
            e.printStackTrace();
            errorMessage="Time Format error! (Example: 12/03/2005, 6:10PM)";
            return false;
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        timeslotField = new javax.swing.JTextField();
        handleExit = new javax.swing.JButton();
        checkAvailabilityButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        technicianEmailField = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        serviceField = new javax.swing.JLabel();
        formMessage = new javax.swing.JLabel();
        handleProceedButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Booking Time Slot");

        timeslotField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeslotFieldActionPerformed(evt);
            }
        });

        handleExit.setText("Exit");
        handleExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleExitActionPerformed(evt);
            }
        });

        checkAvailabilityButton.setText("Check Availability");
        checkAvailabilityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAvailabilityButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Techinician Email");

        jLabel4.setText("Service ");

        handleProceedButton.setText("Proceed to payment");
        handleProceedButton.setEnabled(false);
        handleProceedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleProceedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(handleExit, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(technicianEmailField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(serviceField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(timeslotField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)))))
                .addGap(185, 185, 185))
            .addGroup(layout.createSequentialGroup()
                .addGap(234, 234, 234)
                .addComponent(checkAvailabilityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(handleProceedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(handleExit, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(technicianEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(serviceField, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(timeslotField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(formMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkAvailabilityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(handleProceedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void handleExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleExitActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_handleExitActionPerformed

    private void checkAvailabilityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAvailabilityButtonActionPerformed
        // TODO add your handling code here:
        reqTime =timeslotField.getText(); // Must be in format like this "12/03/2005, 6:00PM"
        Appointment[] appointments = Database.findAppointmentsTechnician(selectedData[0].toString());
        boolean isAvailable = isTechnicianAvailable(reqTime,appointments);

        if(isAvailable){
            formMessage.setText("The time slot is available.");
            formMessage.setForeground(Color.green);
            handleProceedButton.setEnabled(true);
        }else{
            formMessage.setText(errorMessage);
            formMessage.setForeground(Color.red);
            handleProceedButton.setEnabled(false);
        }
    }//GEN-LAST:event_checkAvailabilityButtonActionPerformed

    private void timeslotFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeslotFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeslotFieldActionPerformed

    private void handleProceedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleProceedButtonActionPerformed
        // TODO add your handling code here:
        MakePaymentPage makePaymentPage = new MakePaymentPage();
        makePaymentPage.setVisible(true);
        makePaymentPage.setService(selectedData[1].toString());
        makePaymentPage.setTimeSlot(reqTime);
        makePaymentPage.setPrice(selectedData[3].toString());
        makePaymentPage.setTechinicianEmail(selectedData[0].toString());
        makePaymentPage.setCustomerEmail(email);
        makePaymentPage.populatePaymentData();
        this.setVisible(false);
    }//GEN-LAST:event_handleProceedButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MakeAppointmentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MakeAppointmentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MakeAppointmentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MakeAppointmentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MakeAppointmentPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkAvailabilityButton;
    private javax.swing.JLabel formMessage;
    private javax.swing.JButton handleExit;
    private javax.swing.JButton handleProceedButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel serviceField;
    private javax.swing.JLabel technicianEmailField;
    private javax.swing.JTextField timeslotField;
    // End of variables declaration//GEN-END:variables
}
