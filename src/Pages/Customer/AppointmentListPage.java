/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pages.Customer;

import Models.Appointment;
import Models.Database;
import java.awt.Color;
import java.time.LocalDateTime;
import java.time.LocalTime;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yyhao0422
 */
public class AppointmentListPage extends javax.swing.JFrame {

    /**
     * Creates new form AppointmentListPage
     */
    public String email;
    private int selectedRowIndex;
    
    public void setLoginEmail(String email) {
        this.email = email;
    }
    
    public Object[] selectedData;
    
    
    
    public AppointmentListPage() {
        initComponents();
        appointmentTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e){
                if (!e.getValueIsAdjusting()) { // Ensure the event is not still adjusting
                    int selectedRow = appointmentTable.getSelectedRow();
                    if (selectedRow != -1) { // Check if any row is selected
                        // Retrieve the row data from the table model
                        Object[] rowData = new Object[appointmentTable.getColumnCount()];
                        for (int i = 0; i < rowData.length; i++) {
                            rowData[i] = appointmentTable.getValueAt(selectedRow, i);
                        }
                        // Now you have access to the rowData array representing the selected row
                        // You can perform any action with it
                        selectedData = rowData; 
                        selectedRowIndex = appointmentTable.getSelectedRow();
                        
                    }
                }
            }
        });
    }
    
    public void populateAppointmentTable(){
        
        if(email != null){
            
        Appointment[] appoinments = Database.findAppointmentsCustomer(email);

        String[] columns = {"Service Name","Cust email","Start DateTime","End DateTime","Status"};
        DefaultTableModel appointmentTableModel = new DefaultTableModel(columns,0);
        
        for (Appointment appoinment: appoinments){
            appointmentTableModel.addRow(new Object[]{
                appoinment.getServiceName(),
                appoinment.getCustomerEmail(),
                appoinment.getStartingDateTime(),
                appoinment.getEndingDateTime(), 
                appoinment.getStatus(),
            });
        }
        
        appointmentTable.setModel(appointmentTableModel);   
        
        }
        

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bluePanel = new javax.swing.JScrollPane();
        appointmentTable = new javax.swing.JTable();
        handleExit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        formMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        appointmentTable.setBackground(new java.awt.Color(64, 110, 142));
        appointmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Service Name", "Cust Email", "Start DateTime", "End DateTime", "Status"
            }
        ));
        appointmentTable.setGridColor(new java.awt.Color(64, 110, 142));
        appointmentTable.setPreferredSize(new java.awt.Dimension(300, 335));
        appointmentTable.setRowHeight(30);
        bluePanel.setViewportView(appointmentTable);

        handleExit.setText("Exit");
        handleExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleExitActionPerformed(evt);
            }
        });

        jButton1.setText("Complete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(bluePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(handleExit, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(formMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bluePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(formMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(handleExit, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void handleExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleExitActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_handleExitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.out.println(selectedRowIndex);
        
         if(selectedData != null){       
            FeedbackPage feedbackPage = new FeedbackPage();
            feedbackPage.setVisible(true);
            feedbackPage.setLoginEmail(email);
            feedbackPage.setRevieverEmail(selectedData[1].toString());
            feedbackPage.setSelectedRowIndex(selectedRowIndex);
            Appointment appointment = new Appointment(selectedData[0].toString(),email,selectedData[1].toString(),LocalDateTime.parse(selectedData[2].toString()),LocalDateTime.parse(selectedData[3].toString()),"Done");
            feedbackPage.setAppointment(appointment);
            LocalDateTime currentTime = LocalDateTime.now();
            feedbackPage.setCreatedDateTime(currentTime);
            this.setVisible(false);
        }else{
            formMessage.setText("Please Select a service !");
            formMessage.setForeground(Color.red);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppointmentListPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppointmentListPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppointmentListPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppointmentListPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppointmentListPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable appointmentTable;
    private javax.swing.JScrollPane bluePanel;
    private javax.swing.JLabel formMessage;
    private javax.swing.JButton handleExit;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
